사다리타기
 - 가로줄 긋는 것은 없음.

 개발 방법론 (시작시)
 서비스 분석 > 우선순위 선정 > 구현 시작 : 리팩토링이 쉽지 않고, 확장해나가기 힘들 수 있다.

 강사님
 UI, Database를 배제하고 핵심 로직에만 집중
  *도메인 클래스에 대한 설계 (몇 사이클) && TDD로 로직 구현

  -------
  (Interface 분리) -- input output을 고민하고 추출을 해보아함. , 핵심로직이나 가장 복잡한 부분을 뽑아서 해보자.
 1. 사다리 초기화하기 >> 생성을 담당하는 인터페이스
 2. 사다리 실행해 결과 얻기 > 사다리에 선을 그을지말지 정하는 인터페이스
 3. 사다리 최종 결과 구하기 > 플레이를 구해주는 인터페이스

 사다리 방향은 Enum으로 ...? 또는 Direction객체로 만들어 쓸 수 있다.

처음에는 가능한 default 제어자를 넣고, 서서히 public을 선언하면 된다.